DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS items CASCADE;
DROP TABLE IF EXISTS requests CASCADE;
DROP TABLE IF EXISTS bookings CASCADE;
DROP TABLE IF EXISTS comments CASCADE;


CREATE TABLE IF NOT EXISTS users
(
    id    integer GENERATED ALWAYS AS IDENTITY UNIQUE PRIMARY KEY,
    name  varchar(255),
    email varchar(255) UNIQUE
);

CREATE TABLE IF NOT EXISTS items
(
    id          integer GENERATED BY DEFAULT AS IDENTITY UNIQUE PRIMARY KEY,
    name        varchar(255),
    description varchar(1500),
    available   boolean,
    owner_id integer,
    request_id  integer
);

CREATE TABLE IF NOT EXISTS bookings
(
    id         integer GENERATED BY DEFAULT AS IDENTITY UNIQUE PRIMARY KEY,
    start_date TIMESTAMP WITHOUT TIME ZONE,
    end_date   TIMESTAMP WITHOUT TIME ZONE,
    item_id    integer,
    booker_id  integer,
    status     varchar(255)
);

CREATE TABLE IF NOT EXISTS requests
(
    id           integer GENERATED BY DEFAULT AS IDENTITY UNIQUE PRIMARY KEY,
    description  varchar(1500),
    requestor_id integer,
    created      timestamp
);
CREATE TABLE IF NOT EXISTS comments
(
    id        integer GENERATED BY DEFAULT AS IDENTITY UNIQUE PRIMARY KEY,
    text      varchar(255),
    author_id integer,
    item_is   integer
);


ALTER TABLE items
    ADD FOREIGN KEY (owner_id) REFERENCES users (id);
ALTER TABLE bookings
    ADD FOREIGN KEY (item_id) REFERENCES items (id);
ALTER TABLE bookings
    ADD FOREIGN KEY (booker_id) REFERENCES users (id);
ALTER TABLE requests
    ADD FOREIGN KEY (requestor_id) REFERENCES users (id);
ALTER TABLE items
    ADD FOREIGN KEY (request_id) REFERENCES requests (id);
ALTER TABLE comments
    ADD FOREIGN KEY (item_is) REFERENCES items (id);
ALTER TABLE comments
    ADD FOREIGN KEY (author_id) REFERENCES users (id);

